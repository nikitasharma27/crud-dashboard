{"ast":null,"code":"// import './db.js'; \n// import { v4 as uuidv4 } from 'uuid';\n// const idOne = uuidv4();\n// const idTwo = uuidv4();\n// pseudo database\nlet users = {\n  1: {\n    id: 1,\n    firstName: 'Robin',\n    lastName: 'Wieruch',\n    isDeveloper: true\n  },\n  2: {\n    id: 2,\n    firstName: 'Dave',\n    lastName: 'Davddis',\n    isDeveloper: false\n  }\n};\n\nconst getUsers = id => new Promise((resolve, reject) => {\n  //   const user = users[id];\n  if (!users) {\n    return setTimeout(() => reject(new Error('Users not found')), 250);\n  }\n\n  setTimeout(() => resolve(Object.values(users)), 250); // setTimeout(() => resolve(users[id]), 250);\n}); // usage (1)\n\n\ngetUsers().then(result => {\n  console.log(result);\n}).catch(error => {\n  console.log(error);\n}); // usage (2)\n\nconst doGetUsers = async id => {\n  try {\n    const result = await getUsers(id);\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ndoGetUsers();\n\nconst createUser = data => new Promise((resolve, reject) => {\n  if (!data.firstName || !data.lastName) {\n    reject(new Error('Not all information provided'));\n  }\n\n  const id = '3';\n  const newUser = {\n    id,\n    ...data\n  };\n  users = { ...users,\n    [id]: newUser\n  };\n  setTimeout(() => resolve(true), 250);\n}); // usage\n\n\nconst doCreateUser = async data => {\n  try {\n    const result = await createUser(data);\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ndoCreateUser({\n  firstName: 'Liam',\n  lastName: 'Wieruch'\n});","map":{"version":3,"names":["users","id","firstName","lastName","isDeveloper","getUsers","Promise","resolve","reject","setTimeout","Error","Object","values","then","result","console","log","catch","error","doGetUsers","createUser","data","newUser","doCreateUser"],"sources":["/Users/nikitasharma/Desktop/crm-dashboard/src/service/api.js"],"sourcesContent":["// import './db.js'; \n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const idOne = uuidv4();\n// const idTwo = uuidv4();\n\n// pseudo database\nlet users = {\n    1: {\n        id: 1,\n        firstName: 'Robin',\n        lastName: 'Wieruch',\n        isDeveloper: true,\n      },\n      2: {\n        id: 2,\n        firstName: 'Dave',\n        lastName: 'Davddis',\n        isDeveloper: false,\n      },\n};\n    \nconst getUsers = (id) =>\n  new Promise((resolve, reject) => {\n\n    //   const user = users[id];\n      \n    if (!users) {\n      return setTimeout(\n        () => reject(new Error('Users not found')),\n        250\n      );\n    }\n\n    setTimeout(() => resolve(Object.values(users)), 250);\n    // setTimeout(() => resolve(users[id]), 250);\n});\n\n// usage (1)\ngetUsers()\n  .then((result) => {\n    console.log(result);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n\n// usage (2)\nconst doGetUsers = async (id) => {\n  try {\n    const result = await getUsers(id);\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ndoGetUsers();\n\nconst createUser = (data) =>\n  new Promise((resolve, reject) => {\n    if (!data.firstName || !data.lastName) {\n      reject(new Error('Not all information provided'));\n    }\n\n    const id = '3';\n    const newUser = { id, ...data };\n\n    users = { ...users, [id]: newUser };\n\n    setTimeout(() => resolve(true), 250);\n  });\n\n// usage\nconst doCreateUser = async (data) => {\n  try {\n    const result = await createUser(data);\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ndoCreateUser({ firstName: 'Liam', lastName: 'Wieruch' });"],"mappings":"AAAA;AAEA;AAEA;AACA;AAEA;AACA,IAAIA,KAAK,GAAG;EACR,GAAG;IACCC,EAAE,EAAE,CADL;IAECC,SAAS,EAAE,OAFZ;IAGCC,QAAQ,EAAE,SAHX;IAICC,WAAW,EAAE;EAJd,CADK;EAON,GAAG;IACDH,EAAE,EAAE,CADH;IAEDC,SAAS,EAAE,MAFV;IAGDC,QAAQ,EAAE,SAHT;IAIDC,WAAW,EAAE;EAJZ;AAPG,CAAZ;;AAeA,MAAMC,QAAQ,GAAIJ,EAAD,IACf,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAE/B;EAEA,IAAI,CAACR,KAAL,EAAY;IACV,OAAOS,UAAU,CACf,MAAMD,MAAM,CAAC,IAAIE,KAAJ,CAAU,iBAAV,CAAD,CADG,EAEf,GAFe,CAAjB;EAID;;EAEDD,UAAU,CAAC,MAAMF,OAAO,CAACI,MAAM,CAACC,MAAP,CAAcZ,KAAd,CAAD,CAAd,EAAsC,GAAtC,CAAV,CAX+B,CAY/B;AACH,CAbC,CADF,C,CAgBA;;;AACAK,QAAQ,GACLQ,IADH,CACSC,MAAD,IAAY;EAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,CAHH,EAIGG,KAJH,CAIUC,KAAD,IAAW;EAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,CANH,E,CAQA;;AACA,MAAMC,UAAU,GAAG,MAAOlB,EAAP,IAAc;EAC/B,IAAI;IACF,MAAMa,MAAM,GAAG,MAAMT,QAAQ,CAACJ,EAAD,CAA7B;IACAc,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACD,CAHD,CAGE,OAAOI,KAAP,EAAc;IACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD;AACF,CAPD;;AASAC,UAAU;;AAEV,MAAMC,UAAU,GAAIC,IAAD,IACjB,IAAIf,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/B,IAAI,CAACa,IAAI,CAACnB,SAAN,IAAmB,CAACmB,IAAI,CAAClB,QAA7B,EAAuC;IACrCK,MAAM,CAAC,IAAIE,KAAJ,CAAU,8BAAV,CAAD,CAAN;EACD;;EAED,MAAMT,EAAE,GAAG,GAAX;EACA,MAAMqB,OAAO,GAAG;IAAErB,EAAF;IAAM,GAAGoB;EAAT,CAAhB;EAEArB,KAAK,GAAG,EAAE,GAAGA,KAAL;IAAY,CAACC,EAAD,GAAMqB;EAAlB,CAAR;EAEAb,UAAU,CAAC,MAAMF,OAAO,CAAC,IAAD,CAAd,EAAsB,GAAtB,CAAV;AACD,CAXD,CADF,C,CAcA;;;AACA,MAAMgB,YAAY,GAAG,MAAOF,IAAP,IAAgB;EACnC,IAAI;IACF,MAAMP,MAAM,GAAG,MAAMM,UAAU,CAACC,IAAD,CAA/B;IACAN,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACD,CAHD,CAGE,OAAOI,KAAP,EAAc;IACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD;AACF,CAPD;;AASAK,YAAY,CAAC;EAAErB,SAAS,EAAE,MAAb;EAAqBC,QAAQ,EAAE;AAA/B,CAAD,CAAZ"},"metadata":{},"sourceType":"module"}